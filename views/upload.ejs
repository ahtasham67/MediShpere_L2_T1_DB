<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Prescription Upload</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700");

        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: #dfe9f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            font-family: "Poppins", sans-serif;
        }

        .container {
            max-width: 700px;
            width: 100%;
            padding: 20px 40px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            font-family: "Poppins", sans-serif;
            margin-top: 70px;
        }

        h1,
        h2 {
            text-align: center;
            color: #333;
        }

        .upload-container {
            margin-bottom: 20px;
        }

        input[type="file"] {
            display: block;
            margin-bottom: 20px;
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
            box-sizing: border-box;
            background-color: #f9f9f9;
            font-family: "Poppins", sans-serif;
        }

        input[type="file"]:focus {
            outline: none;
            border-color: #007bff;
            font-family: "Poppins", sans-serif;
        }

        button[type="submit"],
        button[type="button"] {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 3px;
            cursor: pointer;
            width: 20%;
            transition: background-color 0.3s ease;
            font-family: "Poppins", sans-serif;
            margin: 0 auto; /* Center the buttons horizontally */
    display: block;
        }

        button[type="submit"]:hover,
        button[type="button"]:hover {
            background-color: #0056b3;
        }

        .test-suggestion-container {
            margin-bottom: 20px;
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 5px;
            font-family: "Poppins", sans-serif;
        }

        select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
            box-sizing: border-box;
            background-color: #fff;
            font-family: "Poppins", sans-serif;
        }

        .selected-tests-container {
            padding: 20px;
            background-color: #f9f9f9;
            border-radius: 5px;
            font-family: "Poppins", sans-serif;
        }

        #selected-tests-list {
            list-style: none;
            padding: 0;
            font-family: "Poppins", sans-serif;
        }

        #selected-tests-list li {
            margin-bottom: 5px;
            font-family: "Poppins", sans-serif;
        }

        .preview-container {
            text-align: center;
            font-family: "Poppins", sans-serif;
        }

        .preview-image {
            display: block;
            margin: 0 auto;
            max-width: 100%;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        .success-message {
            text-align: center;
            margin-top: 20px;
            color: #007bff;
        }

        .logospan {
            color: blue;
        }

        .hudai {}

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            padding: 10px 35px;
            background: #a6c5eb;
            display: flex;
            z-index: 99;
            align-items: center;
        }

        .navigation a::after {
            content: ' ';
            position: absolute;
            width: 100%;
            height: 3px;
            background: blue;
            border-radius: 5px;
            left: 0px;
            bottom: -6px;
            transform: scaleX(0);
            transform-origin: right;
            transition: transform .5s;
        }

        .navigation a:hover::after {
            transform: scaleX(1);
        }

        .navigation .button-login {
            width: 130px;
            height: 50px;
            background: transparent;
            border: 2px solid aliceblue;
            outline: none;
            border-radius: 26px;
            cursor: pointer;
            font-size: 1.1em;
            color: blue;
            font-weight: 500;
            margin-left: 100px;
            transition: .5s;
            background-color: azure;
        }

        .navigation .button-login:hover {
            background: blue;
            color: whitesmoke;
        }

        .upload-container {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
        }

        .test-suggestion-container {
            margin-bottom: 20px;
            position: relative;
        }

        .selected-tests-container {
            margin-top: 20px;
        }

        .selected-tests-container h2 {
            margin-bottom: 10px;
        }

        /* CSS animation for showing search results */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .test-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            animation: fadeIn 0.3s ease forwards;
            display: none;
            max-height: 150px;
            /* Set maximum height */
            overflow-y: auto;
            /* Enable vertical scrolling */
        }

        .test-suggestions.show {
            display: block;
        }

        .test-suggestions .test-suggestion {
            cursor: pointer;
            padding: 5px 10px;
            margin-bottom: 5px;
            transition: background-color 0.3s ease;
        }

        .test-suggestions .test-suggestion:hover {
            background-color: #f2f2f2;
        }

        #suggestedTest {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-family: "Poppins", sans-serif;
        }

        /* Add or modify this CSS rule for the delete button */
        .selected-tests-container button.delete-button {
    background-color: #ff4d4d;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 5px;
    cursor: pointer;
    margin-left: 5px;
    font-family: "Poppins", sans-serif;
}

.selected-tests-container li {
    display: flex; /* Use flexbox layout */
    align-items: center; /* Align items vertically */
}

.selected-tests-container li button.delete-button {
    margin-left: auto; /* Push the delete button to the right */
}

.common {
  position: relative;
  color: rgb(85, 83, 83);
  font-size: 14px;
  display: table;
  width: 280px;
  padding: 10px;
}

nav {
  position: relative;
  top: 0;
  bottom: 0;
  height: 100vh;
  left: 0;
  background: #fff;
  width: 280px;
  overflow: hidden;
  box-shadow: 0 20px 35px rgba(0, 0, 0, 0.1);
}


.nav-item {
  position: relative;
  top: 12px;
  margin-left: 8px;
}
nav .fas {
  position: relative;
  width: 70px;
  height: 40px;
  top: 14px;
  font-size: 20px;
  text-align: center;
}

    </style>
</head>

<body>
    <header>
        <img src="../../public/logo.jpg" width="40px" style="margin-right:5px; border-radius: 9px; margin-left: 0px;">
        <a href="/doctors/dashboard" class="hudai" style="text-decoration: none;">
            <h2 style="margin-left: 0px;">Medi<span class="logospan">Sphere</span></h2>
        </a>
    </header>

    <div class="container">
          <div class="main" style="margin-top: 50px;">
        <h1><i class="fas fa-prescription" style="color: rgb(129, 129, 255);"></i> Prescription</h1>

        <div class="upload-container">
            <h2>Upload Image</h2>
            <form action="/aa/<%= appointmentid %>/upload" method="post" enctype="multipart/form-data">
                <input type="file" name="image" accept="image/*" required>

                <div class="test-suggestion-container">
                    <h2><i class="fas fa-lightbulb" style="color: rgb(129, 129, 255);"></i> Suggest Tests</h2>
                    <input type="text" id="suggestedTest" oninput="suggestTest(this.value)"
                        placeholder="Search for tests">
                    <div id="testSuggestions" class="test-suggestions"></div>
                    <button type="button" onclick="addTest()">Add Test</button>
                </div>

                <div class="selected-tests-container">
                    <h2>Selected Tests</h2>
                    <ul id="selected-tests-list">
                        <!-- Selected tests will be added here dynamically -->
                    </ul>
                </div>

                <!-- Hidden input field to store selected test names -->
                <input type="hidden" name="testsArray" id="testsArray" value="[]">

                <button type="submit">Submit All</button>
            </form>
        </div>

        <% if (imageUrl) { %>
            <div class="preview-container">
                <div class="upload-container">
                    <div class="success-message">
                        <h2>Image Uploaded Successfully</h2>
                        <!-- <p>Image URL: <%= imageUrl %> -->
                        <p>Preview</p>   
                        </p>
                    </div>
                    <img src="<%= imageUrl %>" alt="Uploaded Image" class="preview-image">
                </div>
            </div>
            <% } %>
    </div>
</div>
    <script>
        // Sample test suggestions
        const testSuggestions = [
    "Blood Test", "Urine Test", "X-Ray", "ECG", "Ultrasound", "MRI", "CT Scan", "Endoscopy", "Colonoscopy", 
    "Thyroid Profile", "Liver Function Test", "Kidney Function Test", "Lipid Profile", "Diabetes Screening",
    "Hemoglobin A1C Test", "Stool Culture", "Electroencephalogram (EEG)", "Bone Density Test", "Mammogram",
    "Pap Smear", "Prostate-specific Antigen (PSA) Test", "Allergy Testing", "Thyroid Function Tests",
    "Creatinine Test", "Complete Blood Count (CBC)", "Urinalysis", "Fecal Occult Blood Test (FOBT)",
    "Pregnancy Test", "Throat Culture", "Electrocardiogram (ECG or EKG)", "Hormone Tests",
    "Blood Glucose Test", "Skin Biopsy", "Spirometry", "Colonoscopy", "Liver Panel",
    "Cardiac Stress Test", "Thyroid Ultrasound", "Prothrombin Time (PT) Test", "Activated Partial Thromboplastin Time (aPTT) Test",
    "Serum Glucose Test", "Vitamin D Test", "Arterial Blood Gases (ABGs)", "Thyroid Stimulating Hormone (TSH) Test",
    "Calcium Blood Test", "Cholesterol Test", "Hemoglobin Test", "Potassium Blood Test", "Sodium Blood Test",
    "Magnesium Blood Test", "Phosphate Blood Test", "Red Blood Cell Count (RBC)", "White Blood Cell Count (WBC)",
    "Platelet Count", "Ferritin Test", "C-Reactive Protein (CRP) Test", "Sedimentation Rate (ESR) Test"
];

        // Function to suggest tests based on input
        function suggestTest(input) {
            const suggestionsContainer = document.getElementById("testSuggestions");
            suggestionsContainer.innerHTML = "";

            // Filter test suggestions based on input
            const filteredSuggestions = testSuggestions.filter(test => test.toLowerCase().includes(input.toLowerCase()));

            // Display filtered suggestions with animation
            if (filteredSuggestions.length > 0) {
                suggestionsContainer.classList.add("show");
                filteredSuggestions.forEach(suggestion => {
                    const suggestionElement = document.createElement("div");
                    suggestionElement.textContent = suggestion;
                    suggestionElement.classList.add("test-suggestion");
                    suggestionElement.addEventListener("click", () => {
                        document.getElementById("suggestedTest").value = suggestion;
                        suggestionsContainer.classList.remove("show");
                    });
                    suggestionsContainer.appendChild(suggestionElement);
                });
            } else {
                suggestionsContainer.classList.remove("show");
            }
        }

        // Function to add selected test to the list
        function addTest() {
            var selectedTest = document.getElementById('suggestedTest').value;
            var selectedTestsList = document.getElementById('selected-tests-list');
            var listItem = document.createElement('li');
            listItem.textContent = selectedTest;
            selectedTestsList.appendChild(listItem);

            // Add delete button
            var deleteButton = document.createElement('button');
            deleteButton.textContent = 'Remove';
            deleteButton.className = 'delete-button'; // Apply the delete-button class
            deleteButton.onclick = function () {
                listItem.remove(); // Remove the test item
                updateTestsArray(); // Update the hidden input value
            };
            listItem.appendChild(deleteButton);


            // Clear the input box after adding the test
            document.getElementById('suggestedTest').value = "";

            // Update hidden input value to store selected test names as an array
            updateTestsArray();
        }

        function updateTestsArray() {
    var testsArray = [];
    var testItems = document.querySelectorAll('#selected-tests-list li');
    testItems.forEach(function (item) {
        // Exclude text content of the delete button
        var testText = item.childNodes[0].textContent.trim();
        testsArray.push(testText);
    });
    document.getElementById('testsArray').value = JSON.stringify(testsArray);
}
    </script>
</body>
</html>